// soma o total de compras por produto, mas não por fornecedor


def itens_semelhantes(compras, top_fornecedores):
    # Verifica se a coluna 'Total (R$)' é do tipo string e converte para float, se necessário
    if compras['Total (R$)'].dtype == 'O':
        compras['Total (R$)'] = compras['Total (R$)'].str.replace('.', '').str.replace(',', '.').astype(float)

    # Filtra as compras apenas para os fornecedores principais
    compras_fornecedores = compras[compras['Fornecedor'].isin(top_fornecedores)]

    # Agrupa por 'Descrição Material' e 'Fornecedor', somando as quantidades e totais
    produtos_por_fornecedor = compras_fornecedores.groupby(['Descrição Material', 'Fornecedor']).agg({'Qtde.': 'sum', 'Total (R$)': 'sum'}).reset_index()

    # Conta quantos fornecedores forneceram cada produto
    produtos_por_quantidade_fornecedores = produtos_por_fornecedor.groupby('Descrição Material').size().reset_index(name='Quantidade_Fornecedores')

    # Filtra os produtos que têm mais de um fornecedor
    produtos_com_mais_de_um_fornecedor = produtos_por_quantidade_fornecedores[produtos_por_quantidade_fornecedores['Quantidade_Fornecedores'] > 1]['Descrição Material']

    # Calcula o total de compras para cada produto com mais de um fornecedor
    total_por_produto = []
    for produto in produtos_com_mais_de_um_fornecedor:
        total_compras = produtos_por_fornecedor[produtos_por_fornecedor['Descrição Material'] == produto]['Total (R$)'].sum()
        total_por_produto.append({'Produto': produto, 'Total (R$)': total_compras})

    return pd.DataFrame(total_por_produto)

# Exemplo de uso
top_fornecedores = ['UMEHARA ALIMENTOS LTDA', 'Hortifruti Genesis Ltda', 'Supermercados unidos (pai da luiza)']
total_por_produto = itens_semelhantes(compras, top_fornecedores)
print(total_por_produto)
